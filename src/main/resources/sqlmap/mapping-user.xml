<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mycompany.myapp.dao.UserDao">
	<resultMap id="BaseResultMap" type="UserDO">
		<id column="id" property="id"/>
		<result column="account" property="account"/>
		<result column="password" property="password"/>
		<result column="username" property="username"/>
		<result column="sex" property="sex"/>
		<result column="age" property="age"/>
		<result column="mobile" property="mobile"/>
		<result column="address" property="address"/>
		<result column="type" property="type"/>
		<result column="status" property="status"/>
		<result column="gmt_create" property="gmtCreate"/>
		<result column="gmt_modified" property="gmtModified"/>
	</resultMap>

	<sql id="baseColumn">
		id,account,password,username,sex,age,mobile,address,type,status,gmt_create,gmt_modified
	</sql>

	<sql id="queryParams">
	</sql>

	<sql id="orderBy">
		order by gmt_modified desc
	</sql>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert into user (account,password,username,sex,age,mobile,address,type,status,gmt_create,gmt_modified) values
		(#{account},#{password},#{username},#{sex},#{age},#{mobile},#{address},#{type},#{status},now(),now())
	</insert>

	<insert id="batchInsert">
		insert into user (account,password,username,sex,age,mobile,address,type,status,gmt_create,gmt_modified) values
		<foreach collection="list" item="item" separator=",">
			(#{item.account},#{item.password},#{item.username},#{item.sex},#{item.age},#{item.mobile},#{item.address},#{item.type},#{item.status},now(),now())
		</foreach>
	</insert>

	<update id="update">
		update user
		set account=#{account},password=#{password},username=#{username},sex=#{sex},age=#{age},mobile=#{mobile},address=#{address},type=#{type},status=#{status},gmt_create=#{gmtCreate},gmt_modified=now()
		where id = #{id}
	</update>

	<delete id="delete">
		delete from user where id = #{id}
	</delete>

	<delete id="batchDelete">
		delete from user
		<where>
			<choose>
				<when test="list != null and list.size()>0">
					id in
					<foreach collection="list" item="id" separator="," open="(" close=")">
						#{id}
					</foreach>
				</when>
				<otherwise>
					1=0
				</otherwise>
			</choose>
		</where>
	</delete>

	<select id="getById" resultMap="BaseResultMap">
		select <include refid="baseColumn" /> from user
		where id = #{id}
	</select>

	<select id="queryByIds" resultMap="BaseResultMap">
		select <include refid="baseColumn" /> from user
		<where>
			<choose>
				<when test="list != null and list.size()>0">
					id in
					<foreach collection="list" item="id" separator="," open="(" close=")">
						#{id}
					</foreach>
				</when>
				<otherwise>
					1=0
				</otherwise>
			</choose>
		</where>
	</select>

	<select id="queryList" resultMap="BaseResultMap">
		select <include refid="baseColumn" /> from user
		<include refid="queryParams" />
		<include refid="orderBy"/>
	</select>

	<select id="count" resultType="int">
		select count(1) from user
		<include refid="queryParams" />
	</select>

	<select id="queryPage" resultMap="BaseResultMap">
		select <include refid="baseColumn" /> from user
		<include refid="queryParams" />
	</select>

	<update id="updateStatus">
		update user set status=#{status}
		where id=#{id}
	</update>

	<update id="batchUpdateStatus">
		update user set status=#{status}
		<where>
			<choose>
				<when test="list != null and list.size()>0">
					id in
					<foreach collection="list" item="id" separator="," open="(" close=")">
						#{id}
					</foreach>
				</when>
				<otherwise>
					1=0
				</otherwise>
			</choose>
		</where>
	</update>

</mapper>